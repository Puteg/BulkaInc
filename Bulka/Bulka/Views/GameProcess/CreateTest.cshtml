@model Bulka.Models.GameProcess.TestGameProcessViewModel

<div class="x_content">
    @using (Html.BeginForm("CreateTest", "GameProcess", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
            <div class="col-md-8 col-sm-8 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.DateTime, htmlAttributes: new {@class = "control-label col-md-3 col-sm-3 col-xs-12"})
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.DateTime, null, htmlAttributes: new {@class = "form-control col-md-7 col-xs-12"})
                        @Html.ValidationMessageFor(model => model.DateTime, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DayCount, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.DayCount, null, htmlAttributes: new { @class = "form-control col-md-7 col-xs-12" })
                        @Html.ValidationMessageFor(model => model.DayCount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ClubId, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.DropDownListFor(model => model.ClubId, Model.ClubSelectListItems, new { @class = "form-control col-md-7 col-xs-12" })
                        @Html.ValidationMessageFor(model => model.ClubId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PlayersCount, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.PlayersCount, null, new { @class = "form-control col-md-7 col-xs-12" })
                        @Html.ValidationMessageFor(model => model.PlayersCount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MinAmount, htmlAttributes: new {@class = "control-label col-md-3 col-sm-3 col-xs-12"})
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.MinAmount, null, new {@class = "form-control col-md-7 col-xs-12"})
                        @Html.ValidationMessageFor(model => model.MinAmount, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MaxAmount, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.MaxAmount, null, new { @class = "form-control col-md-7 col-xs-12" })
                        @Html.ValidationMessageFor(model => model.MaxAmount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AvgCountRebuy, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.AvgCountRebuy, null, new { @class = "form-control col-md-7 col-xs-12" })
                        @Html.ValidationMessageFor(model => model.AvgCountRebuy, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="col-md-6 col-md-offset-3">
                        <button type="reset" class="btn btn-primary">Отменить</button>
                        <button id="send" type="submit" class="btn btn-success">Создать</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>